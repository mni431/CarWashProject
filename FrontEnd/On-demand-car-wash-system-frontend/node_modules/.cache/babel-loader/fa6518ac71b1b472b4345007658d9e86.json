{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AKANTKUS\\\\Desktop\\\\Car Wash Ui\\\\On-demand-car-wash-system-frontend\\\\src\\\\components\\\\pages\\\\Booking.js\";\n// import { toBeEmpty } from \"@testing-library/jest-dom\";\nimport axios from \"axios\";\nimport React from \"react\";\nimport { useState, useEffect } from \"react\"; // import { toast } from \"react-toastify\";\n\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./booking.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport Footer from \"./Footer\";\n\nfunction Booking() {\n  // const [washers, setWashers] = useState([]);\n  // useEffect(() => {\n  //   fetch(\"http://localhost:8084/admin/washpack\").then((result) => {\n  //     result.json().then((resp) => {\n  //       setWashers(resp);\n  //       console.log(resp);\n  //     });\n  //   });\n  // }, []);\n  const [order, setOrder] = useState({\n    carModel: \"\",\n    carName: \"\",\n    contactno: \"\",\n    date: \"\",\n    orderId: \"\",\n    username: \"\",\n    address: \"\",\n    cost: \"\"\n  });\n  const navigate = useNavigate();\n  const [formErrors, setFormErrors] = useState({});\n\n  const handleChange = event => {\n    setOrder(order => ({ ...order,\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  const handleSubmit = () => {\n    //validate add student form\n    let errors = {}; // const isValid=isValid();\n\n    if (!order.orderId) {\n      errors[\"idErr\"] = \"Id is required\";\n    }\n\n    if (!order.carName) {\n      errors[\"carNameErr\"] = \"carName is required\";\n    }\n\n    if (!order.carModel) {\n      errors[\"carModelErr\"] = \"carModel is required\";\n    }\n\n    if (!order.contactno) {\n      errors[\"contactnoErr\"] = \"contact no is required\";\n    }\n\n    if (!order.date) {\n      errors[\"dateErr\"] = \"date is required\";\n    }\n\n    if (!order.cost) {\n      errors[\"costErr\"] = \"cost is required\";\n    }\n\n    if (!order.username) {\n      errors[\"usernameErr\"] = \"username is required\";\n    }\n\n    if (!order.address) {\n      errors[\"addressErr\"] = \"address is required\";\n    }\n\n    setFormErrors(errors);\n    const noErrors = Object.keys(errors).length === 0;\n\n    if (noErrors) {\n      const payload = {\n        carModel: order.carModel,\n        carName: order.carName,\n        contactno: order.contactno,\n        date: order.date,\n        orderId: order.orderId,\n        username: order.username,\n        address: order.address,\n        cost: order.cost\n      };\n      axios.post(\" http://localhost:8081/order/addorder\", payload).then(resp => alert(\"Order is saved with id:\" + resp.data.orderId));\n    }\n  };\n\n  /*#__PURE__*/\n  React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }));\n}\n\n;\nexport default Booking;","map":{"version":3,"sources":["C:/Users/AKANTKUS/Desktop/Car Wash Ui/On-demand-car-wash-system-frontend/src/components/pages/Booking.js"],"names":["axios","React","useState","useEffect","useNavigate","Footer","Booking","order","setOrder","carModel","carName","contactno","date","orderId","username","address","cost","navigate","formErrors","setFormErrors","handleChange","event","target","name","value","handleSubmit","errors","noErrors","Object","keys","length","payload","post","then","resp","alert","data"],"mappings":"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","sourcesContent":["// import { toBeEmpty } from \"@testing-library/jest-dom\";\r\nimport axios from \"axios\";\r\nimport React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\n// import { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./booking.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Footer from \"./Footer\";\r\n\r\nfunction Booking() {\r\n  // const [washers, setWashers] = useState([]);\r\n\r\n  // useEffect(() => {\r\n  //   fetch(\"http://localhost:8084/admin/washpack\").then((result) => {\r\n  //     result.json().then((resp) => {\r\n  //       setWashers(resp);\r\n  //       console.log(resp);\r\n  //     });\r\n  //   });\r\n  // }, []);\r\n\r\n  const [order, setOrder] = useState({\r\n    carModel: \"\",\r\n    carName: \"\",\r\n    contactno: \"\",\r\n    date: \"\",\r\n    orderId: \"\",\r\n    username: \"\",\r\n    address: \"\",\r\n    cost: \"\"\r\n\r\n\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const [formErrors, setFormErrors] = useState({});\r\n\r\n  const handleChange = (event) => {\r\n    setOrder((order) => ({\r\n      ...order,\r\n      [event.target.name]: event.target.value,\r\n    }));\r\n  };\r\n  const handleSubmit = () => {\r\n    //validate add student form\r\n    let errors = {};\r\n    // const isValid=isValid();\r\n    if (!order.orderId) {\r\n      errors[\"idErr\"] = \"Id is required\";\r\n    }\r\n    if (!order.carName) {\r\n      errors[\"carNameErr\"] = \"carName is required\";\r\n    }\r\n    if (!order.carModel) {\r\n      errors[\"carModelErr\"] = \"carModel is required\";\r\n    }\r\n\r\n    if (!order.contactno) {\r\n      errors[\"contactnoErr\"] = \"contact no is required\";\r\n    }\r\n    if (!order.date) {\r\n      errors[\"dateErr\"] = \"date is required\";\r\n    }\r\n    if (!order.cost) {\r\n      errors[\"costErr\"] = \"cost is required\";\r\n    }\r\n    if (!order.username) {\r\n      errors[\"usernameErr\"] = \"username is required\";\r\n    }\r\n    if (!order.address) {\r\n      errors[\"addressErr\"] = \"address is required\";\r\n    }\r\n    setFormErrors(errors);\r\n    const noErrors = Object.keys(errors).length === 0;\r\n    if (noErrors) {\r\n      const payload = {\r\n        carModel: order.carModel,\r\n        carName: order.carName,\r\n        contactno: order.contactno,\r\n        date: order.date,\r\n        orderId: order.orderId,\r\n        username: order.username,\r\n        address: order.address,\r\n        cost: order.cost\r\n      };\r\n      axios\r\n        .post(\r\n          \" http://localhost:8081/order/addorder\",\r\n          payload\r\n        )\r\n        .then((resp) =>\r\n          alert(\"Order is saved with id:\" + resp.data.orderId)\r\n        );\r\n    }\r\n  };\r\n\r\n  \r\n      <div>\r\n        <Footer />\r\n      </div>\r\n};\r\nexport default Booking;\r\n\r\n"]},"metadata":{},"sourceType":"module"}